<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>JSPBook</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <!--  사용자가 요청한 페이지가 없으면 404 오류가 발생하여 오류페이지/errorCode_404.jsp URL로 요청 -->
<!--   <error-page> -->
<!--   	 error-code: 오류코드 설정 -->
<!--   	<error-code>404</error-code> -->
<!--  	location : 오류코드가 발생시 오류 페이지의 URL로 요청  -->
<!--   	<location>/errorCode_404.jsp</location> -->
<!--   </error-page> -->
  <!--  10/0과 같이 잘못된 코드를 실행 시 500오류가 발생하여 오류 페이지 errorCode_500.jsp를 요청함 -->
<!--   <error-page> -->
  	<!-- error-code: 오류코드 설정 -->
<!--   	<error-code>500</error-code> -->
<!--   	 location : 오류코드가 발생시 오류 페이지의 URL로 요청 -->
<!--   	<location>/errorCode_500.jsp</location> -->
<!--   </error-page> -->
  <!-- 예외 유형 처리 -->
  <error-page>
  	<error-code>500</error-code>
 	<location>/example11/exception_error.jsp</location>
  </error-page>
  <error-page>
  	<exception-type>java.lang.NullPointerException</exception-type>
  	<location>/errorNullPointer.jsp</location>
  </error-page>
  <!-- Fillter01과 Filter 인터페이스를 구현한 자바 클래스인 AuthenFilter를 연결해줌 -->
  <filter>
  	<filter-name>filter01</filter-name>
  	<filter-class>ch12.AuthenFilter</filter-class>
  </filter>
  <!-- url-pattern의 URL을 요청시 이 필터가 작동함 -->
  <filter-mapping>
  	<filter-name>filter01</filter-name>
  	<url-pattern>/ch12/filter_process.jsp</url-pattern>
  </filter-mapping>
  <!-- filter02_process.jsp URL을 요청 시 InitParamFilter.java를 filter로 연결해줌 -->
  <filter>
  	<filter-name>filter02</filter-name>
  	<filter-class>ch12.InitParamFilter</filter-class>
  	<init-param>
  		<param-name>param1</param-name>
  		<param-value>admin</param-value>
  	</init-param>
  	<init-param>
  		<param-name>param2</param-name>
  		<param-value>1234</param-value>
  	</init-param>
  </filter>
  <filter-mapping>
  	<filter-name>filter02</filter-name>
  	<url-pattern>/ch12/filter02_process.jsp</url-pattern>
  </filter-mapping>
  <!-- 12장 문제 4번 -->
  <filter>
  	<filter-name>filter</filter-name>
  	<filter-class>example12.com.filter.LoginCheckFilter</filter-class>
  	<init-param>
  		<param-name>param1</param-name>
  		<param-value>admin</param-value>
  	</init-param>
  	<init-param>
  		<param-name>param2</param-name>
  		<param-value>admin1234</param-value>
  	</init-param>
  </filter>
   <filter-mapping>
  	<filter-name>filter</filter-name>
  	<url-pattern>/example12/loginForm_process.jsp</url-pattern>
  </filter-mapping>
  <!-- 모든 URI 요청 처리 전에  LogFilter를 실행  -->
  	<filter>
		<filter-name>LogFilter</filter-name>
		<filter-class>filter.LogFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>LogFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>Filter02_2</filter-name>
		<filter-class>filter.LogFileFilter</filter-class>
		<init-param>
			<param-name>filename</param-name>
			<param-value>C:\logs\JSPBook.log</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Filter02_2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>